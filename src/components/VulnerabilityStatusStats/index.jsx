import React from 'react'
import styles from "./index.module.css"
import ProgressBar from '../progressBar';
import criticalIcon from "./icons/criticals.svg"
import highIcon from "./icons/high.svg"
import mediumIcon from "./icons/medium.svg"
import lowIcon from "./icons/low.svg";
import { ReactSVG } from 'react-svg';

const VulnerabilityStatusStats = ({initialData}) => {
  
  
  const data = [{
    title:"Critical",
    value:initialData?.critical || 10,
    total:initialData?.total || 10,
    icon:criticalIcon,
    strokeColor:"red"
  },
  {
    title:"High",
    value:initialData?.high || 20,
    total:initialData?.total || 10,
    icon:highIcon,
    strokeColor:"orange"
  },
  {
    title:"Medium",
    value:initialData?.medium || 30,
    total:initialData?.total || 10,
    icon:mediumIcon,
    strokeColor:"#6fcd9e"
  },
  {
    title:"Low",
    value:initialData?.low || 50,
    total:initialData?.total || 10,
    icon:lowIcon,
    strokeColor:"green"
  }
]
function calculatePercentages(data) {
  return data.map(item => {
      const percentage = item.total ? (item.value / item.total) * 100 : 0;
      return {
          ...item,
          percentage: percentage.toFixed(2)  // Format to 2 decimal places
      };
  });
}

    
  return (<div className={styles.container}>
       {
        calculatePercentages(data).map((item) => (
            <div>
            <div>
            <h2>
                <span style={{background:item.strokeColor}}>
                <ReactSVG src={item.icon} className={styles.icon} />
                   </span>
            {item.title}</h2>
            <svg style={{position:"relative",top:"-0.2rem"}} xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" strokeWidth="0.50"><circle cx="5" cy="12" r="2"></circle><circle cx="12" cy="12" r="2"></circle><circle cx="19" cy="12" r="2"></circle></g></svg>
            </div>
            <div>
               <ProgressBar 
               data={{
                  title:0,
                 value:item.value,
                strokeColor:item.strokeColor,
                percentage:item.percentage,
                isPercentageShow:true
                // icon:item.icon
            }}
            /> 
            </div>
    
           </div>
        ))
       }
       {/* <div>
        <div>
        <h2>
            <span><svg xmlns="http://www.w3.org/2000/svg" width="1.2em" height="1.2em" viewBox="0 0 24 24"><path fill="currentColor" d="M11 15h2v2h-2zm0-6h2v5h-2z"/><path fill="currentColor" d="M20 8h-2.81a6 6 0 0 0-1.82-1.96L17 4.41L15.59 3l-2.17 2.17A6 6 0 0 0 12 5a6 6 0 0 0-1.41.17L8.41 3L7 4.41l1.62 1.63A6.1 6.1 0 0 0 6.81 8H4v2h2.09A6.6 6.6 0 0 0 6 11v1H4v2h2v1a6.6 6.6 0 0 0 .09 1H4v2h2.81a5.99 5.99 0 0 0 10.38 0H20v-2h-2.09a6.6 6.6 0 0 0 .09-1v-1h2v-2h-2v-1a6.6 6.6 0 0 0-.09-1H20Zm-4 4v3a4 4 0 0 1-.07.7l-.1.65l-.37.65a3.993 3.993 0 0 1-6.92 0l-.37-.64l-.1-.65A4.3 4.3 0 0 1 8 15v-4a4 4 0 0 1 .07-.7l.1-.65l.37-.65a4.1 4.1 0 0 1 1.21-1.31l.57-.39l.74-.18A3.8 3.8 0 0 1 12 7a4 4 0 0 1 .95.12l.68.16l.61.42a3.9 3.9 0 0 1 1.21 1.31l.38.65l.1.65A4 4 0 0 1 16 11Z"/></svg></span>
        Critical</h2>
        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" strokeWidth="0.50"><circle cx="5" cy="12" r="2"></circle><circle cx="12" cy="12" r="2"></circle><circle cx="19" cy="12" r="2"></circle></g></svg>
        </div>
        <div>
           <ProgressBar 
           data={{
              title:0,
             value:40,
            strokeColor:"red",
            percentage:50,
            // icon:item.icon
        }}
        /> 
        </div>

       </div> */}
        
  </div>
  )
}

export default VulnerabilityStatusStats